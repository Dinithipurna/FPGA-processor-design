|mux1
data0x[0] => sub_wire1[0].IN1
data0x[1] => sub_wire1[1].IN1
data1x[0] => sub_wire1[2].IN1
data1x[1] => sub_wire1[3].IN1
data2x[0] => sub_wire1[4].IN1
data2x[1] => sub_wire1[5].IN1
sel[0] => sel[0].IN1
sel[1] => sel[1].IN1
result[0] << lpm_mux:LPM_MUX_component.result
result[1] << lpm_mux:LPM_MUX_component.result


|mux1|lpm_mux:LPM_MUX_component
data[0][0] => mux_arc:auto_generated.data[0]
data[0][1] => mux_arc:auto_generated.data[1]
data[1][0] => mux_arc:auto_generated.data[2]
data[1][1] => mux_arc:auto_generated.data[3]
data[2][0] => mux_arc:auto_generated.data[4]
data[2][1] => mux_arc:auto_generated.data[5]
sel[0] => mux_arc:auto_generated.sel[0]
sel[1] => mux_arc:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_arc:auto_generated.result[0]
result[1] <= mux_arc:auto_generated.result[1]


|mux1|lpm_mux:LPM_MUX_component|mux_arc:auto_generated
data[0] => data0_wire[0].IN0
data[1] => data0_wire[1].IN0
data[2] => data1_wire[0].IN0
data[3] => data1_wire[1].IN0
data[4] => data2_wire[0].IN0
data[5] => data2_wire[1].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[1].IN0
sel[0] => data1_wire[1].IN1
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[1].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


